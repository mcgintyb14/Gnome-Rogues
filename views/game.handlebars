<main class="game-interface">
    <div class="enemies-container">
        <img src="{{enemy.Image}}" alt="Enemy Image">
        <h2>{{enemy.name}}</h2>
        <p>{{enemy.name}}'s' HP: {{enemy.hp}}</p>
    </div>

    <div class="character-container">
        <img src="{{class.Image}}" alt="Class Image" class="character-image">
        <h2>{{character.name}}</h2>
        <p>{{character.name}}'s HP: {{character.current_hp}}</p>
    </div>

    <p> Writing random stuff to test</p>

  <div class="card-container" id="card-container">
        {{#each cards as |card|}}
        <div class="card" id="{{card.id}}">
            <h3>{{card.name}}</h3>
            <p>Damage: {{card.damage}}</p>
            <p>Dodge: {{card.dodge}}</p>
        </div>
        {{/each}}
    </div>


    <script src="/scripts/index.js"></script>

    <script>
        // Get the form element
        const handCards = document.getElementById('card-container');
        debugger
        //localStorage.setItem("gameId", gameId);
        // Add event listener for form submission
        handCards.addEventListener('click', async function (event) {
            event.preventDefault(); // Prevent default form submission behavior
            let chosenCard = event.target.parentElement
            if (chosenCard.classList.contains('card')) {
                    let cardId = chosenCard.id;
                    chosenCard = chosenCard.children
                let playedCardData = {
                    id: cardId,
                    name: chosenCard[0].textContent,
                    damage: chosenCard[1].textContent.split(": ")[1],
                    dodge: chosenCard[2].textContent.split(": ")[1]
                }
                playerTurn(playedCardData);
            } else if (event.target.classList.contains('card')) {
                chosenCard = event.target
                let cardId = chosenCard.id;
                chosenCard = chosenCard.children
                let playedCardData = {
                    id: cardId,
                    name: chosenCard[0].textContent,
                    damage: chosenCard[1].textContent.split(": ")[1],
                    dodge: chosenCard[2].textContent.split(": ")[1]
                }
                playerTurn(playedCardData);
            }
        })
    </script>

</main>
